version: "3.9"
services:
  postgres:
    image: postgres:15
    container_name: elixir_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hello_phoenix_prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app_blue:
    build: .
    container_name: elixir_app_blue
    restart: unless-stopped
    environment:
      MIX_ENV: prod
      PHX_SERVER: "true"
      PHX_HOST: "10.10.10.11"
      PORT: "4000"
      # ðŸ”¥ FIX: Ganti ecto:// menjadi postgresql://
      DATABASE_URL: "postgresql://postgres:postgres@postgres/hello_phoenix_prod"
      SECRET_KEY_BASE: "GANTI_DENGAN_HASIL_mix phx.gen.secret"
      ELIXIR_ERL_OPTIONS: "+fnu"
    depends_on:
      postgres:
        condition: service_healthy  # Tunggu postgres benar-benar healthy
    ports:
      - "4001:4000"
    healthcheck:
      # ðŸ”¥ FIX: Gunakan HTTP health check, bukan hanya port check
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:4000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s  # Beri waktu lebih untuk startup

  app_green:
    build: .
    container_name: elixir_app_green
    restart: unless-stopped
    environment:
      MIX_ENV: prod
      PHX_SERVER: "true"
      PHX_HOST: "10.10.10.11"
      PORT: "4000"
      # ðŸ”¥ FIX: Ganti ecto:// menjadi postgresql://
      DATABASE_URL: "postgresql://postgres:postgres@postgres/hello_phoenix_prod"
      SECRET_KEY_BASE: "GANTI_DENGAN_HASIL_mix phx.gen.secret"
      ELIXIR_ERL_OPTIONS: "+fnu"
    depends_on:
      postgres:
        condition: service_healthy  # Tunggu postgres benar-benar healthy
    ports:
      - "4002:4000"
    healthcheck:
      # ðŸ”¥ FIX: Gunakan HTTP health check, bukan hanya port check
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:4000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s  # Beri waktu lebih untuk startup

  lb:
    image: nginx:alpine
    container_name: elixir_lb
    restart: unless-stopped
    ports:
      - "4000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/upstream_target.conf:/etc/nginx/conf.d/upstream_target.conf:ro
    depends_on:
      - app_blue
      - app_green

volumes:
  pgdata: